{"Program": {"int": ["#j_main", "Declaration-list", "$", "#delete_j_main"], "void": ["#j_main", "Declaration-list", "$", "#delete_j_main"], "epsilon": ["#j_main", "Declaration-list", "$", "#delete_j_main"]}, "Declaration-list": {"int": ["Declaration", "Declaration-list"], "void": ["Declaration", "Declaration-list"], "epsilon": []}, "Declaration": {"int": ["Declaration-initial", "Declaration-prime"], "void": ["Declaration-initial", "Declaration-prime"]}, "Declaration-initial": {"int": ["#p_input", "Type-specifier", "#dec_id", "ID"], "void": ["#p_input", "Type-specifier", "#dec_id", "ID"]}, "Declaration-prime": {"(": ["Fun-declaration-prime"], ";": ["Var-declaration-prime"], "[": ["Var-declaration-prime"]}, "Var-declaration-prime": {";": ["#dec_var", ";"], "[": ["[", "#dec_array", "NUM", "]", ";"]}, "Fun-declaration-prime": {"(": ["#start_func_scope", "(", "Params", ")", "#end_func_params", "Compound-stmt", "#end_func_scope"]}, "Type-specifier": {"int": ["int"], "void": ["void"]}, "Params": {"int": ["#p_input", "int", "#dec_id", "ID", "Param-prime", "Param-list"], "void": ["void"]}, "Param-list": {",": [",", "Param", "Param-list"], "epsilon": []}, "Param": {"int": ["Declaration-initial", "Param-prime"], "void": ["Declaration-initial", "Param-prime"]}, "Param-prime": {"[": ["#dec_array_for_func", "[", "]"], "epsilon": ["#dec_param"]}, "Compound-stmt": {"{": ["{", "Declaration-list", "Statement-list", "}"]}, "Statement-list": {"{": ["Statement", "Statement-list"], "break": ["Statement", "Statement-list"], ";": ["Statement", "Statement-list"], "if": ["Statement", "Statement-list"], "repeat": ["Statement", "Statement-list"], "return": ["Statement", "Statement-list"], "ID": ["Statement", "Statement-list"], "(": ["Statement", "Statement-list"], "NUM": ["Statement", "Statement-list"], "epsilon": []}, "Statement": {"{": ["Compound-stmt"], "break": ["Expression-stmt"], ";": ["Expression-stmt"], "if": ["Selection-stmt"], "repeat": ["Iteration-stmt"], "return": ["Return-stmt"], "ID": ["Expression-stmt"], "(": ["Expression-stmt"], "NUM": ["Expression-stmt"]}, "Expression-stmt": {"break": ["#jp_break_save", "break", ";"], ";": [";"], "ID": ["Expression", ";"], "(": ["Expression", ";"], "NUM": ["Expression", ";"]}, "Selection-stmt": {"if": ["if", "(", "Expression", ")", "#save_if", "Statement", "else", "#jp_save_else", "Statement", "#jp_else"]}, "Iteration-stmt": {"repeat": ["repeat", "#start_repeat_scope", "Statement", "#end_repeat_scope", "until", "(", "Expression", ")", "#jp_repeat", "#jp_break"]}, "Return-stmt": {"return": ["return", "Return-stmt-prime", "#jp_return"]}, "Return-stmt-prime": {";": [";"], "ID": ["Expression", ";", "#return"], "(": ["Expression", ";", "#return"], "NUM": ["Expression", ";", "#return"]}, "Expression": {"ID": ["#p_id", "ID", "B"], "(": ["Simple-expression-zegond"], "NUM": ["Simple-expression-zegond"]}, "B": {"=": ["#increase_assign", "=", "Expression", "#assign"], "[": ["[", "Expression", "]", "#array_address", "H"], "(": ["Simple-expression-prime"], "*": ["Simple-expression-prime"], "+": ["Simple-expression-prime"], "-": ["Simple-expression-prime"], "<": ["Simple-expression-prime"], "==": ["Simple-expression-prime"], "epsilon": ["Simple-expression-prime"]}, "H": {"=": ["#increase_assign", "=", "Expression", "#assign"], "*": ["G", "D", "C"], "+": ["G", "D", "C"], "-": ["G", "D", "C"], "<": ["G", "D", "C"], "==": ["G", "D", "C"], "epsilon": ["G", "D", "C"]}, "Simple-expression-zegond": {"(": ["Additive-expression-zegond", "C"], "NUM": ["Additive-expression-zegond", "C"]}, "Simple-expression-prime": {"(": ["Additive-expression-prime", "C"], "*": ["Additive-expression-prime", "C"], "+": ["Additive-expression-prime", "C"], "-": ["Additive-expression-prime", "C"], "<": ["Additive-expression-prime", "C"], "==": ["Additive-expression-prime", "C"], "epsilon": ["Additive-expression-prime", "C"]}, "C": {"<": ["Relop", "Additive-expression", "#bool_op"], "==": ["Relop", "Additive-expression", "#bool_op"], "epsilon": []}, "Relop": {"<": ["#p_input", "<"], "==": ["#p_input", "=="]}, "Additive-expression": {"(": ["Term", "D"], "ID": ["Term", "D"], "NUM": ["Term", "D"]}, "Additive-expression-prime": {"(": ["Term-prime", "D"], "*": ["Term-prime", "D"], "+": ["Term-prime", "D"], "-": ["Term-prime", "D"], "epsilon": ["Term-prime", "D"]}, "Additive-expression-zegond": {"(": ["Term-zegond", "D"], "NUM": ["Term-zegond", "D"]}, "D": {"+": ["Addop", "Term", "#add", "D"], "-": ["Addop", "Term", "#add", "D"], "epsilon": []}, "Addop": {"+": ["#p_input", "+"], "-": ["#p_input", "-"]}, "Term": {"(": ["Factor", "G"], "ID": ["Factor", "G"], "NUM": ["Factor", "G"]}, "Term-prime": {"(": ["Factor-prime", "G"], "*": ["Factor-prime", "G"], "epsilon": ["Factor-prime", "G"]}, "Term-zegond": {"(": ["Factor-zegond", "G"], "NUM": ["Factor-zegond", "G"]}, "G": {"*": ["*", "Factor", "#mult", "G"], "epsilon": []}, "Factor": {"(": ["(", "Expression", ")"], "ID": ["#p_id", "ID", "Var-call-prime"], "NUM": ["#p_num", "NUM"]}, "Var-call-prime": {"(": ["(", "Args", ")", "#check_func"], "[": ["Var-prime"], "epsilon": ["Var-prime"]}, "Var-prime": {"[": ["[", "Expression", "]", "#array_address"], "epsilon": []}, "Factor-prime": {"(": ["(", "Args", ")", "#check_func"], "epsilon": []}, "Factor-zegond": {"(": ["(", "Expression", ")"], "NUM": ["#p_num", "NUM"]}, "Args": {"(": ["Arg-list"], "ID": ["Arg-list"], "NUM": ["Arg-list"], "epsilon": []}, "Arg-list": {"(": ["Expression", "#assign_param", "Arg-list-prime"], "ID": ["Expression", "#assign_param", "Arg-list-prime"], "NUM": ["Expression", "#assign_param", "Arg-list-prime"]}, "Arg-list-prime": {",": [",", "Expression", "#assign_param", "Arg-list-prime"], "epsilon": []}}